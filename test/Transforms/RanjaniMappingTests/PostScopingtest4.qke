module {
  func.func @new_function() attributes {mapping_v2p = [4, 5, 3, 1, 2, 0, 6, 7]} {
    %0 = quake.alloca !quake.ref
    %1 = quake.alloca !quake.ref
    %2 = quake.alloca !quake.ref
    %3 = quake.alloca !quake.ref
    %4 = quake.alloca !quake.ref
    %5 = quake.alloca !quake.ref
    %6 = quake.alloca !quake.ref
    %7 = quake.alloca !quake.ref
    quake.async_scope {
      quake.x [%0] %2 : (!quake.ref, !quake.ref) -> ()
      quake.h %0 : (!quake.ref) -> ()
      quake.h %1 : (!quake.ref) -> ()
      quake.x [%1] %2 : (!quake.ref, !quake.ref) -> ()
      quake.x [%2] %0 : (!quake.ref, !quake.ref) -> ()
      quake.x [%1] %2 : (!quake.ref, !quake.ref) -> ()
      quake.h %1 : (!quake.ref) -> ()
      quake.swap %0, %2 : (!quake.ref, !quake.ref) -> ()
    } {qpuId = 2 : i64}
    quake.async_scope {
      quake.x [%6] %7 : (!quake.ref, !quake.ref) -> ()
      quake.h %6 : (!quake.ref) -> ()
    } {qpuId = 3 : i64}
    "quake.sync"() {qpuId1 = 2 : i64, qpuId2 = 3 : i64} : () -> ()
    quake.swap %2, %6 : (!quake.ref, !quake.ref) -> ()
    quake.async_scope {
      quake.swap %1, %2 : (!quake.ref, !quake.ref) -> ()
    } {qpuId = 2 : i64}
    quake.async_scope {
      quake.x [%3] %5 : (!quake.ref, !quake.ref) -> ()
      quake.x [%4] %5 : (!quake.ref, !quake.ref) -> ()
      quake.x [%4] %3 : (!quake.ref, !quake.ref) -> ()
      quake.x [%3] %5 : (!quake.ref, !quake.ref) -> ()
    } {qpuId = 1 : i64}
    "quake.sync"() {qpuId1 = 2 : i64, qpuId2 = 1 : i64} : () -> ()
    quake.swap %2, %5 : (!quake.ref, !quake.ref) -> ()
    quake.async_scope {
      quake.swap %4, %5 : (!quake.ref, !quake.ref) -> ()
    } {qpuId = 1 : i64}
    "quake.sync"() {qpuId1 = 1 : i64, qpuId2 = 2 : i64} : () -> ()
    quake.swap %5, %2 : (!quake.ref, !quake.ref) -> ()
    quake.async_scope {
      quake.x [%0] %1 : (!quake.ref, !quake.ref) -> ()
      quake.x [%2] %1 : (!quake.ref, !quake.ref) -> ()
      quake.x [%0] %2 : (!quake.ref, !quake.ref) -> ()
      quake.h %1 : (!quake.ref) -> ()
    } {qpuId = 2 : i64}
    "quake.sync"() {qpuId1 = 3 : i64, qpuId2 = 2 : i64} : () -> ()
    quake.swap %6, %2 : (!quake.ref, !quake.ref) -> ()
    quake.async_scope {
      quake.swap %5, %4 : (!quake.ref, !quake.ref) -> ()
      quake.x [%3] %5 : (!quake.ref, !quake.ref) -> ()
      quake.x [%3] %4 : (!quake.ref, !quake.ref) -> ()
      quake.x [%5] %4 : (!quake.ref, !quake.ref) -> ()
    } {qpuId = 1 : i64}
    quake.async_scope {
      quake.x [%2] %0 : (!quake.ref, !quake.ref) -> ()
    } {qpuId = 2 : i64}
    %measOut = quake.mz %2 : (!quake.ref) -> !quake.measure
    %measOut_0 = quake.mz %5 : (!quake.ref) -> !quake.measure
    %measOut_1 = quake.mz %0 : (!quake.ref) -> !quake.measure
    %measOut_2 = quake.mz %3 : (!quake.ref) -> !quake.measure
    %measOut_3 = quake.mz %6 : (!quake.ref) -> !quake.measure
    %measOut_4 = quake.mz %4 : (!quake.ref) -> !quake.measure
    %measOut_5 = quake.mz %1 : (!quake.ref) -> !quake.measure
    %measOut_6 = quake.mz %7 : (!quake.ref) -> !quake.measure
    return
  }
}

