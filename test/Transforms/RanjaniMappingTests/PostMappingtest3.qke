module {
  func.func @new_function() attributes {mapping_reorder_idx = [4, 0, 5, 1, 3, 2, 7, 6], mapping_v2p = [4, 0, 5, 2, 3, 1, 7, 6]} {
    %0 = quake.null_wire
    %1 = quake.null_wire
    %2 = quake.null_wire
    %3 = quake.null_wire
    %4 = quake.null_wire
    %5 = quake.null_wire
    %6 = quake.null_wire
    %7 = quake.null_wire
    %8:2 = quake.x [%0] %2 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %9 = quake.h %8#0 : (!quake.wire) -> !quake.wire
    %10 = quake.h %1 : (!quake.wire) -> !quake.wire
    %11:2 = quake.x [%3] %10 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %12:2 = quake.x [%4] %9 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %13:2 = quake.x [%11#0] %5 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %14 = quake.h %6 : (!quake.wire) -> !quake.wire
    %15:2 = quake.swap %11#1, %12#0 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %16:2 = quake.swap %13#1, %13#0 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %17:2 = quake.x [%15#0] %8#1 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %18:2 = quake.x [%15#1] %16#0 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %19 = quake.h %17#0 : (!quake.wire) -> !quake.wire
    %20:2 = quake.x [%16#1] %18#1 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %21:2 = quake.swap %18#0, %19 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %22:2 = quake.x [%21#0] %7 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %23:2 = quake.x [%14] %22#1 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %24:2 = quake.x [%17#1] %22#0 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %25 = quake.h %23#0 : (!quake.wire) -> !quake.wire
    %measOut, %wires = quake.mz %12#1 : (!quake.wire) -> (!quake.measure, !quake.wire)
    %26 = quake.discriminate %measOut : (!quake.measure) -> i1
    %measOut_0, %wires_1 = quake.mz %21#1 : (!quake.wire) -> (!quake.measure, !quake.wire)
    %27 = quake.discriminate %measOut_0 : (!quake.measure) -> i1
    %measOut_2, %wires_3 = quake.mz %24#0 : (!quake.wire) -> (!quake.measure, !quake.wire)
    %28 = quake.discriminate %measOut_2 : (!quake.measure) -> i1
    %measOut_4, %wires_5 = quake.mz %20#0 : (!quake.wire) -> (!quake.measure, !quake.wire)
    %29 = quake.discriminate %measOut_4 : (!quake.measure) -> i1
    %measOut_6, %wires_7 = quake.mz %24#1 : (!quake.wire) -> (!quake.measure, !quake.wire)
    %30 = quake.discriminate %measOut_6 : (!quake.measure) -> i1
    %measOut_8, %wires_9 = quake.mz %20#1 : (!quake.wire) -> (!quake.measure, !quake.wire)
    %31 = quake.discriminate %measOut_8 : (!quake.measure) -> i1
    %measOut_10, %wires_11 = quake.mz %25 : (!quake.wire) -> (!quake.measure, !quake.wire)
    %32 = quake.discriminate %measOut_10 : (!quake.measure) -> i1
    %measOut_12, %wires_13 = quake.mz %23#1 : (!quake.wire) -> (!quake.measure, !quake.wire)
    %33 = quake.discriminate %measOut_12 : (!quake.measure) -> i1
    quake.sink %wires_1 : !quake.wire
    quake.sink %wires_5 : !quake.wire
    quake.sink %wires_9 : !quake.wire
    quake.sink %wires_7 : !quake.wire
    quake.sink %wires : !quake.wire
    quake.sink %wires_3 : !quake.wire
    quake.sink %wires_13 : !quake.wire
    quake.sink %wires_11 : !quake.wire
    return
  }
}

